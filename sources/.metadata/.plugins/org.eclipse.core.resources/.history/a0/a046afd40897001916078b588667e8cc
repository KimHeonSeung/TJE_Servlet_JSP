package khs.command;

import java.io.IOException;
import java.sql.Connection;
import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import khs.jdbc.util.*;
import khs.model.*;
import khs.service.*;
import java.util.*;

public class MainCommand extends Command {
	private String formPage = "/WEB-INF/forms/main.jsp";
	private String submitPage = "/WEB-INF/submits/main.jsp";
	private String errorPage = null;
		

	// private ArticleListService alService = new ArticleListService();
	private Board_InfoService biService = new Board_InfoService();
	
	protected String processForm(HttpServletRequest request, HttpServletResponse response) {
		
		
		
		try (Connection conn = ConnectionProvider.getConnection()) {

			HashMap<String, Object> values = new HashMap<>();
			values.put("conn", conn);
			
			HashMap<String, Object> resultMap = biService.service(values);
			
			ArrayList<Board_Info> boardList = (ArrayList<Board_Info>)resultMap.get("boardList");
			
			resultMap = liService.service(values);
			
			// like result는 좋아요 결과가 true, 좋아요 취소 결과가 false이다.
			like_result = (Boolean)resultMap.get("like_result");
			
			// 좋아요가 true 인 경우 totla_board에서 likecount를 1 올린다.
			if(like_result == true) {
				values.put("like_count_p", like_result);
				values.put("like_count_m", !like_result);
				lctService.service(values);
			} else if (like_result == false) {
				values.put("like_count_p", like_result);
				values.put("like_count_m", !like_result);
				lctService.service(values);
			}
			
			result = like_result;
			request.setAttribute("like_result", like_result);
			
		} catch (Exception e) {
			e.printStackTrace();
		}
//		게시판 리스트를 전부 가져와야 한다.
//		board_id 1,2,3,4,5 ......
//		board id에 해당하는 top 5개글을 가져와야 한다.
	
		
		
		return formPage;
	}
		
		
		
		
//		try (Connection conn = ConnectionProvider.getConnection()) {
//			HashMap<String, Object> values = new HashMap<>();
//			values.put("conn", conn);
//			HashMap<String, Object> resultMap = alService.service(values);
//
//			request.setAttribute("articleCount", resultMap.get("articleCount"));
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
//		return formPage;
	
	
	
	
	
	
	protected String processSubmit(HttpServletRequest request, HttpServletResponse response) {
		return submitPage;
	}
	
	
}














